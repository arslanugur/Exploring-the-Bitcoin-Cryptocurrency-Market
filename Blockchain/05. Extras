
Lunarcrush.com  sosyal duygu analizi
Messari.io       balinaların neyi satın aldığı



BLOCKCHAIN FEATURES
  DISTRIBUTED LEDGER
  PEER TO PEER
  TRANSPARENCY
  CONSENSUS
  ENCRYPTION
  IMMUTABILITY
  PROGRAMABLE




DISTRIBUTED LEDGER
A ledger is a collection of transactions. It is not a collection of assets. Assets are part of a transaction, but the ledger records the transaction. 
With a digitally distributed ledger or a blockchain, no one owns the ledger. 
The ledger is distributed among participants in the network, all running the same blockchain protocols. 
It is decentralized in that an identical copy of the ledger exists on every node/computer on the network. 
In 2009 with the publishing of Satoshi Nakamoto’s whitepaper “Bitcoin: A Peer-to-Peer Electronic Cash System”, 
Bitcoin became the first application to leverage blockchain technology by recording the first asset transfer on a public blockchain ledger.


PEER TO PEER
The ledger is stored, updated, and maintained by a peer network. Nodes form the infrastructure of a blockchain network. 
They store, spread and preserve the blockchain data, so a blockchain exists on nodes. 
All nodes on a network follow the same rules of operation or protocols, but nodes have different roles. 
A full node contains a copy of the blockchain protocol, transaction history of the blockchain and aids in the maintenance of the blockchain. 
User node interacts with the ledger. With blockchain technology, a lack of a centralized authority is replaced with a peer-to-peer network.

Blockchain networks can be public or private. 
A public blockchain is open to anyone with an internet connection and the appropriate application. 
A private blockchain grants access and rights to its users before they can interact.


TRANSPARENCY
In a blockchain, we can see all the transactions that have occurred on the shared or distributed ledger. 
A blockchain stores details of every transaction that occurred since the first transfer. 
This first transfer, along with some system information that we will discuss later, becomes the first block in our chain and is referred to as the genesis block. 
Since every node shares a copy of the agreed-upon ledger, there is no friction about the transactions, everyone has the same agreed-upon copy. 
Centralized systems are not transparent, the information about the ledger is controlled by one authority.


CONSENSUS
Blockchain ledgers are different from centralized ledgers because network participants have an agreement upon what is in the identical ledger. 
In order for the blocks to be added, all the nodes in the system come to agree as to what transactions are accurate and should be added to the chain of blocks. 
Since there is no central authority telling the nodes which transactions are valid, a new way to reach agreement or come to consensus is needed.

The way in which each blockchain comes to consensus is built into the protocol, 
they are the rules built into the code that determine how the nodes will add ledger transactions. 
The Bitcoin network uses a proof of work consensus model. 
This process of building agreement among a group of mutually distrusting participants is a benefit of blockchain consensus.

ENCRYPTION
Encryption and cryptography are combined with blockchain technology to assure the information on the blockchain is authentic.
In our previous real-world example, the music sharing companies not only had legal issues from copyright infringement, 
they also could not solve the data integrity problem. 
Music downloaded from these platforms was only as reliable as the anonymous person storing and sending it. 
The data had no integrity. Cryptography and blockchain offer a secure way to prove something is authentic. 
Instead of relying on third-party, trust is put into cryptographic algorithms that prove the provenance and authenticity of an attestation.



IMMUTABILITY
Cryptography also plays a part in another powerful feature of blockchain technology, immutability. 
What makes blockchain incredibly powerful is that all the blocks are linked together. 
With the use of a cryptographic technique called hashing, 
the linked information is forged so that if you go back and try to change any data on any block anywhere in the shared ledger, 
the link with the other copies is broken in a very obvious and easy-to-determine way. 
With blockchain, there is no possibility of changing the data or altering the data inside the blockchain, it is permanent. 
In a traditional database, a system administrator oversees the ledger and can make changes.




PROGRAMABLE
Some blockchains offer an additional feature, smart contracts, that impose logic into the system. 
If you think of the Bitcoin blockchain as a calculator recording financial transactions, you can think of these blockchains as computers. 
The first of these blockchains is Ethereum, created by Vitalik Buterin, Joe Lubin and team. 
Ethereum runs the EVM, Ethereum Virtual Machine, which has the ability to impose digital agreements or smart contracts. 
A smart contract is a program that runs on a blockchain that can impose contractual agreements. 
Typically, they work as digital agreements that enforce a specific set of rules. 
These rules are predefined by computer code, which is replicated and executed by all network nodes. 
Blockchain smart contracts allow for the creation of trustless protocols. 
This means that two parties can make commitments via blockchain, without having to know or trust each other. 
They can be sure that if the conditions aren't fulfilled, the contract won't be executed. 
Other than that, the use of smart contracts can remove the need for intermediaries, reducing operational costs significantly.






Blockchain Developer
Developers design, write and upload smart contracts to the blockchain. 
Developer design workflows that operate with blockchains and smart contracts. 
Responsibilities can include project design, smart contract development and implementation, front end applications design and application deployment. 
Skills a developer needs can include 
    Microsoft SQL Server, VS, .NET, MVC, AJAX, SQL, C, Py, Solidity, C++, C#, JS, Node.js, JQuery, SOAP, REST, FTP, HTML, XML, XSLT, XCOD, Neural-networks, Regression, Agile Scrum, MYSQL. 
Solutions are developed for Hyperledger Fabric, Ethereum, Quorum Ripple, Corda and other distributed ledger solutions.


CONSUMER BENEFITS FROM BLOCKCHAIN
  LOGISTICS
  FOOD SUPPLY
  PROCUREMENT
  TRACEABILITY
  FAIR LABOR & COMPLIANCE
  RESOURCE MANAGEMENT

BUSINESS BENEFITS FROM BLOCKCHAIN
  PAYMENTS
  REDUCE PAPER DEPENDENCIES
  INCREASED DOCUMENT SECURITY
  TRANSPARENCY & TRUST
  COMPLIANCE
  RESOURCE MANAGEMENT

  Approach: 
  DLT Labs along with Walmart Canada initiated a tracking program tackling the enormous problem in the freight and shipping industry of dispute resolution in disparate invoicing systems. 
  The solution connects all points on the supply chain with a shared trusted ledger. 
  This eliminates the root problems that cause invoice disputes. 
  The carriers are a vital link in Walmart's supply chain backbone, and the DLT solution ensures invoicing systems run smoothly.
  Result: 
  Demonstrable transformation of freight management and carrier relationships by implementing a shared DLT invoicing system with trust and transparency build-in, 
  reduces disputes among organization by 95%.


GOVERNMENT BENEFITS FROM BLOCKCHAIN
  REDUCES SILOED DATA
  INTERNAL PAYMENT SYSTEMS
  REDUCE PAPER WASTE
  TRANSPARENCY&TRUST
  INCREASES SECURITY OF DOCS
  RESOURCE MANAGEMENT

  Approach: 
  To make Dubai the happiest city on Earth by recreating everyday experiences for residents and visitors of Dubai, 
  making them more personalized seamless, efficient and impactful. 
  The Smart Dubai strategy will be using three essential pillars: government efficiency, industry creation and international leadership
  Result: 
  By the end of 2021, Dubai government will go completely paper-free, 
  eliminating more than one billion pieces of paper used for government transactions every day. 
  When successful, Dubai will be the first blockchain-powered government driving the future economy.



Chapter 2. Blockchain Mechanics / Understanding Ledgers
Basic Terms
  Ethereum
  Ethereum, like Bitcoin, is a decentralized open-source blockchain. 
  Unlike the Bitcoin Network, the Ethereum Protocol has the ability to run smart contracts. 
  The cryptocurrency running on the Ethereum network is called Ether.

  Smart Contracts
  A smart contract is computer code that can be run on a blockchain that executes the conditions of an agreement.

  Public Blockchains
  Public blockchain has no barrier to entry. Anyone with a cell phone and a digital wallet can transact on the blockchain.
  
  Private Blockchains
  Private blockchains or permissioned blockchains have a Membership Services piece that grants access to users before they can interact with the blockchain.

  Digital Wallet
  A digital wallet is a computer application that represents a traditional wallet. 
  It gives the user the ability to store and transact cryptocurrencies through the Internet.

  Public Key Infrastructure (PKI)
  Public Key Infrastructure is the identity management system for instilling trust into the electronic transfers of information or value. 
  It is the technology used to authenticate users and information by issuing a set of key pairs (public and private).
  




SINGLE-ENTRY LEDGER: ONE SIDED ENTRY IN EITHER THE CREDIT COLUMN OR THE DEBIT COLUMN
  • Ledgers first appeared around 3,000 B.C.
  • Single-entry only.
  • Chanakya, an Indian leader, creates the first documented accounting standards.

DOUBLE-ENTRY LEDGER: TRACKS DEBITS AND CREDITS, TELLS THE STORY OF A TRANSACTION FROM BOTH/ALL SIDES
  COMPANY A PRIVATE LEDGER  <--> COMPANY B PRIVATE LEDGER
  • Double-entry ledger appears in 1340 A.D.
  • Tracks debits and credits.
  • Tells the story ofatransaction from both/all sides.
  • The Italian Luca Pacioli, recognized as the father of accounting and bookkeeping, was the first person to publishawork on double-entry bookkeeping and introduced the field in Italy.

TRIPLE-ENTRY LEDGER: TRACKS DEBITS AND CREDITS, TELLS THE STORY OF A TRANSACTION FROM BOTH/ALL SIDES, DISTRIBUTED LEDGER RECORD
  • Triple-entry accounting is an enhancement to the traditional double-entry system, in which all accounting entries involving outside parties are cryptographically sealed byathird entry.
  • Debits, credits, and an immutable link to all past debits and credits. Triple-entry ledger appears in 2008 inawhite paper by Satoshi Nakamoto (a.k.a., Blockchain).
  • Some features include: tamper-proof records, distributed ledgers, double-entry+cryptography, validated, secure, and private, digitally signed receipts.


https://medium.com/tokenring/ancient-uses-of-cryptography-four-examples-that-pre-date-the-internet-14679ae4f509


The KEY TERMS in cryptography:
  Cryptography:
  Cryptography is a technique used to secure the communication between two parties from a third. 
  The term cryptography is derived from two ancient greek terms, “kryptos” which means “hidden” and “graphein” which means “to write”.
  Secret:
  The data which we are trying to protect.
  Key:
  A piece of data used for encrypting and decrypting the secret.
  Function:
  The process or function used to encrypt the secret.
  Cipher:
  The encrypted secret data, the digital secret, the output of the mathematical function or a cryptographic algorithm.
  Encryption:
  This is the process from plain text (ordinary text) to cipher text (random sequence of bits).
  Decryption:
  Encryption is the reverse process of converting ciphertext into plain text.


Simple example function:
  Secret = "Blockchain technology is transformative"
  Function = Swap each letter in the secret with a new letter according to the Key
  Key = "+2"
  Cipher = "Dnqemejckp vgejpqnqia ku vtcpuhqtocvkxg".

Byzantine Fault Tolerance - Byzantine Generals Problem



To understand cryptography in blockchain, 
you must be able to differentiate between various cryptographic techniques used. 
There are four main ways blockchain leverages cryptography:
  01. Public Key Cryptography:
    This encryption method uses a pair of keys: 
    an encryption key, and a decryption key, named public key and private key, respectively. 
    The key pair generated by this algorithm consists of a private key and a unique public key that is generated using the same algorithm.
  
    Identity in the blockchain is based on public key cryptography. 
    A person’s address on the blockchain is their public key.

    Transactions on the blockchain include their public key and are digitally signed with the sender’s private key:
    A digital signature verifies that someone in possession of the private key authorized the transaction.
    Digital signatures can be easily verified using the corresponding public key, which is included in the transaction.
    
    
    Public key cryptography is how identity is handled on the blockchain.
    A user's address on the blockchain is their public key.
    THIS HAS SEVERAL USEFUL PROPERTIES:
    01. Users don't need to reveal their real identity on the blockchain 
    but can positively identify themselves since determining their private key requires solving a hard problem
    02. Anyone can send a user an encrypted message since they have easy access to their public key
    03. Users can verify the validity of their transactions using digital signatures

    RSA Public Key Cryptography
      ANYONE CAN VERIFY THE SIGNATURE USING A SIMPLE THREE-STEP PROCESS
      01. Condense the attached  message using the same method as the message writer
      02. Raise the attached signature to the user's public key
      03. Verify that the results of the previous two steps are identical 
    
    Ethereum is a public blockchain that anyone can participate in. Hyperledger is an example of an enterprise blockchain where participants must be granted access to engage in the blockchain.
    Ethereum: A user’s identity is an address based on their public key.
    Hyperledger: Identity is managed by X.509 certificates. 
                  Certificates are only shared with parties involved in the transaction.
    Public key cryptography uses a pair of a public key and a private key to perform different tasks. 
    Public keys are widely distributed, while private keys are kept secret.

    Using a person's public key, it is possible to encrypt a message so that only the person with the private key can decrypt and read it. 
    Using a private key, a digital signature can be created 
    so that anyone with the corresponding public key can verify that the message was created by the owner of the private key and was not modified since.

    
  02. Zero-Knowledge Proofs:
    A new approach to protecting digital secrets that prove knowledge of a secret without revealing it.
    
    Zero-knowledge proofs authenticate parties without the need to widely transmit private information online. 
    A zero-knowledge proof (ZKP) is a cryptographic method that allows a party (the prover) to prove to another party (the verifier) 
    that a given statement is true, without conveying any additional information.
    
    Let's review an example. 
    Let's say there are two toy cars, identical in shape and size, except, one is red and one is blue. 
    Jerry, who is color-blind, holds the toy cars behind his back. Jerry then shows one of the cars to Sam. 
    Jerry then hides that car behind his back and shows Sam the other car. 
    Sam can consistently detect the switch 
    because the cars are different colors, 
    but he never has to reveal the color of the cars to Jerry in order to prove the secret.
    
    Cave Example: The Cave Door Analogy
    Pretend that there's a circular cave, 
    with only one entrance or exit and at the back of this circular cave 
    there's a door which can be unlocked using a secret code entered onto a keypad.
    
    
  03. Hash Functions
    This type of encryption doesn’t make use of keys. It uses a cipher to generate a hash value of a fixed length. 
    The function converts plain text (no matter the size) into a hash of fixed size. 
    It is nearly impossible for the contents of plain text to be recovered from the cipher text. 
    Think of it like trying to recreate a human from a fingerprint, a fingerprint uniquely represents a human 
    no matter the size of the human and you can’t reverse engineer a fingerprint to recreate the human.
    
    
    When using blockchain, the need to trust a central authority to verify the accuracy of data is removed and replaced by trust in a cryptographic hashing function. 
    With data integrity guaranteed by algorithms, trust becomes part of the system.

    Blockchain provides users with data integrity in a trustless environment. 
    This is accomplished using cryptography in a way that moves the burden of trust from data processors to cryptographic algorithms.

    Hash functions are featured heavily in blockchain. 
    A hash function is a mathematical equation with four important properties:

    Hash functions can take anything as input and create an output with a fixed size. 
    This makes it possible to condense anything into a piece of data of a fixed size and is how messages are condensed for digital signatures.
    It’s easy to calculate a hash, but hard to determine a hash input from the output. 
    The best option is to keep trying inputs until one produces the desired output.
    Inputs that differ by a single bit produce hashes that differ by half of their bits on average. 
    This prevents someone from finding a desired hash input using a “hill climbing”.
    It is infeasible to find two inputs that produce the same output when hashed. 
    Since a hash can take any input and produce a fixed output, it makes sense that multiple different inputs will create the same output. 
    A good hash function will make it so that you have to try a large number of inputs before finding two that produce the same output.
 
    
    GENESIS BLOCK                           BLOCK2                           BLOCK3
    ------------------------------------------------------------------------------------------
    DATA:                                   DATA:                            DATA:
    "Starting a blockchain"                 "Adding transactions"           "Keep on chaining" 
    
    PREVIOUS HASH:                          PREVIOUS HASH:                  PREVIOUS HASH:
    00000                                   08F28                           OSW32
    
    HASH:                                   HASH:                           HASH:
    08F28                                   OSW32                           OTR67
    
    
    Cryptographic Hashing Demo - SHA256 Hash 

    
  04. Merkle Trees
    A data storage technique that compresses or packs data 
    for storing blockchains with a tamper-free component built in. 
    Merkle trees are built upon hashing principles in that each hash becomes a part of the next hash to build a tamper resistant data storage model.

    Aspecial type of data storage structure based on hash functions is calledaMerkle tree:
    • It is structured asabinary tree; the leaves contain the values to be stored and each internal node is the hash of its two children.
    • It provides efficient lookups and protection against forgery since verifyingatransaction is included in the tree. 
      Can be accomplished by sending only the transaction, the hash contained in each node between the transaction leaf node and the root, and the hash values used to create each hash sent.
    • Looking upatransaction in a Merkle tree with three levels includes sending two transactions 
      (the desired one and the other child of its parent) and three hashes (the transaction's parent, the root, and the root's other child).

      Merkle Tree, Validation of Data: Root, Child Nodes, Leaf Nodes, Data

      BLOCK 'O' HEADER          BLOCK '1' HEADER                BLOCK '2' HEADER
    PREVIOUS HEADER HASH      PREVIOUS HEADER HASH            PREVIOUS HEADER HASH
        MERKLE ROOT               MERKLE ROOT                      MERKLE ROOT
                                 
                                 HASH_ABCDEFGH
          HASH_ABCD                                               HASH_EFGH
       HASH_AB HASH_CD                                          HASH_EF HASH_GH
       H_A H_B H_C H_D                                           H_E H_F H_G H_H
       T_A T_B T_C T_D                                           T_E T_F T_G T_H    
                           DATA BLOCKS/BLOCK '1' TRANSACTIONS
      Merkle trees are a data structure that allows authenticated storage with efficient data retrieval.


Ethereum vs. Hyperledger Fabric
      The use of public keys for identity management is a logical choice since knowledge of a public key is necessary for verification of digital signatures. 
      Both Ethereum and Hyperledger Fabric use digital signatures on transactions 
      and blocks to verify the identity of the creator and that the signed data has not been modified since signing. 
      Public key cryptography is used in the blockchain as a method for managing users’ identities without revealing real world identities.
      In Ethereum, users are identified by an address that is directly related to the user's public key. 
      This provides identity verification while preserving anonymity.
      
      Hash functions are at the core of all blockchain technology. 
      One of the primary uses for hash functions is chaining blocks together. 
      In both Ethereum and Hyperledger Fabric, blocks include the hash of the previous block to tie the blockchain into a cohesive whole.

      Zero-knowledge proofs are to increase the privacy of users. 
      Currently, Ethereum is working on a layer 2 solution, where a second layer blockchain would store large amounts of data and only prove the batch of information is valid to layer 1 (mainnet). 
      Hyperledger Fabric has a pluggable cryptographic library that supports ZKP techniques for enhanced privacy measures.

      Merkle trees are a data structure that allows authenticated storage with efficient data retrieval. 
      Both Ethereum and Hyperledger Fabric are smart contract platforms that use a particular type of Merkle tree called the Patricia tree to store the current state of their virtual machine.


CRYPTOGRAPHY                           HYPERLEDGER                               ETHEREUM
Public Key Cryptography
Hash Functions
Zero-Knowledge Proofs
Merkle Tree Structure 

Public Key Cryptography
HYPERLEDGER
Membership Service Providers define and issue certificate authority to entities to issue X.509 digital certificates that contain public keys and defines the users' rights.
ETHEREUM
Based on ECDSA (Elliptic Curve Digital Signature Algorithm) any user can generate a public key fromaprivate key.


Hash Functions
HYPERLEDGER/ETHEREUM: Hyperledger Fabric and Ethereum link blocks together by including the hash of the previous block into the hash of the current block creatingacohesive unbreakable chain.

Zero-Knowledge Proofs
HYPERLEDGER
Hyperledger offers ZKP cryptographic functions in the Ursa Library to prove the existence ofatransaction without revealing the details.
ETHEREUM
Ethereum uses ZKP technology to reduce computing and storage resources needed to validate blocks. 
It accomplishes this by reducing the data stored by only proving block is valid without sharing all the data.

Merkle Tree Structure 
HYPERLEDGER/ETHEREUM: 
Ethereum and Hyperledger Fabric are smart contract platforms that useaparticular type of Merkle tree called the Patricia tree to store the current state of their virtual machine.







